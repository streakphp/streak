name: CI
on: [push]
jobs:
  validate-composer:
    name: composer validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Docker pull
        run: docker-compose pull php
      - name: Docker caching
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - name: Start PHP container
        run: docker-compose up --detach --build --no-deps php
      - name: Run composer validate
        run: docker-compose exec -T php composer validate --strict --no-interaction --ansi
  run-php-cs-fixer:
    name: php-cs-fixer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Docker pull
        run: docker-compose pull php
      - name: Docker caching
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - name: Composer caching
        uses: actions/cache@v2
        with:
          path: ./build/.composer
          key: ${{ runner.os }}-composer-v1-${{ hashFiles('composer.json') }}
          restore-keys: ${{ runner.os }}-composer-v1-
      - name: Start PHP container
        run: docker-compose up --detach --build --no-deps php
      - name: Install dependencies
        run: docker-compose exec -T php composer --no-scripts install --no-interaction --ansi
      - name: Run php-cs-fixer
        run: docker-compose exec -T php bin/php-cs-fixer fix --diff --dry-run --ansi --config=.php-cs-fixer.dist.php
  run-phpunit:
    name: phpunit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Docker pull
        run: docker-compose pull
      - name: Docker caching
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - name: Composer caching
        uses: actions/cache@v2
        with:
          path: ./build/.composer
          key: ${{ runner.os }}-composer-v1-${{ hashFiles('composer.json') }}
          restore-keys: ${{ runner.os }}-composer-v1-
      - name: Start containers
        run: docker-compose up --detach --build
      - name: Install dependencies
        run: docker-compose exec -T php composer install --no-scripts --no-interaction --ansi
      - name: Run phpunit
        run: docker-compose exec -T --env XDEBUG_MODE=coverage php php -dzend_extension=xdebug.so -dxdebug.mode=debug bin/phpunit --color=always --configuration=phpunit.xml.dist
      - name: Upload coverage report to codecov.io
        uses: codecov/codecov-action@v1
        with:
          files: ./build/.phpunit/clover.xml
          fail_ci_if_error: true
          verbose: true
  run-rector:
    name: rector
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Docker pull
        run: docker-compose pull php
      - name: Docker caching
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - name: Composer caching
        uses: actions/cache@v2
        with:
          path: ./build/.composer
          key: ${{ runner.os }}-composer-v1-${{ hashFiles('composer.json') }}
          restore-keys: ${{ runner.os }}-composer-v1-
      - name: Start PHP container
        run: docker-compose up --detach --build --no-deps php
      - name: Install dependencies
        run: docker-compose exec -T php composer install --no-interaction --ansi
      - name: Run rector
        run: docker-compose exec -T php bin/rector --no-progress-bar --dry-run --ansi
  run-deptrac:
    name: deptrac
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Docker pull
        run: docker-compose pull php
      - name: Docker caching
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - name: Composer caching
        uses: actions/cache@v2
        with:
          path: ./build/.composer
          key: ${{ runner.os }}-composer-v1-${{ hashFiles('composer.json') }}
          restore-keys: ${{ runner.os }}-composer-v1-
      - name: Start PHP container
        run: docker-compose up --detach --build --no-deps php
      - name: Install dependencies
        run: docker-compose exec -T php composer install --no-scripts --no-interaction --ansi
      - name: Run deptrac
        run: docker-compose exec -T php bin/deptrac --no-progress --no-interaction --cache-file=./build/.deptrac/.deptrac.cache --ansi
